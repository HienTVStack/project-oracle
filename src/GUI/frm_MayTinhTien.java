/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Thearding.clockTheard;
import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
//import java.awt.font.TextAttribute;
//import javafx.scene.text.Font;
import doan_oracle.frm_DangNhap;
import doan_oracle.DBconnection;

/**
 *
 * @author ADMIN
 */
public class frm_MayTinhTien extends javax.swing.JFrame {
    PreparedStatement preparedStatement = null;
    ResultSet resultset = null;
    Connection connection = null;
    
    String arr[] = {"Mã SP", "Tên SP", "Số lượng", "Giảm giá", "�?ơn giá", "Thành ti�?n"};
    DefaultTableModel model = new DefaultTableModel(arr, 0);
    /**
     * Creates new form frm_MayTinhTien
     */
    
    public frm_MayTinhTien() {
        initComponents();
        setJFram();
        //doDuLieuVaoTable();
    }
   public frm_MayTinhTien(String data){
       initComponents();
        
        
        setJFram();
        lbTenNhanVien.setText(data);
        
        //doDuLieuVaoTable();
  }
   private void initClock(){
       clockTheard th = new clockTheard(lbGio);
        th.start();
   }
   
   private void setJFram(){
        setLocationRelativeTo(null);
        setTitle("Máy tính ti�?n");
        setResizable(false);
        this.txtSoLuong.setText("1");
//        try {
//            tabChucNang.setSelectedComponent(pnl_MTT_ChucNang1.form);
//        } catch (Exception e) {
//            pnl_MTT_ChucNang1 pnl = new pnl_MTT_ChucNang1();
//            tabChucNang.add("", pnl);
//            tabChucNang.setSelectedComponent(pnl);
//        }
        this.lbNgay.setText(LocalDate.now().toString());
        initClock();
        tblHoaDon.setRowHeight(50);tblHoaDon.setFont(new Font("Time New Rows", Font.BOLD, 18));
        showHinhThucThanhToan();
   }
   public void doDuLieuVaoTable(){
       tblHoaDon.removeAll();
       String arr[] = {"Mã SP", "Tên SP", "Số lượng", "Giảm giá", "�?ơn giá", "Thành ti�?n"};
       DefaultTableModel model = new DefaultTableModel(arr, 0);
       Vector vector = new Vector();
       vector.add(Dialog_MTT_SearchSanPham.maSP);
       vector.add(Dialog_MTT_SearchSanPham.tenSP);
       vector.add(Dialog_MTT_SearchSanPham.soLuong);
       vector.add(Dialog_MTT_SearchSanPham.giamGia);
       vector.add(Dialog_MTT_SearchSanPham.donGia);
       vector.add(Dialog_MTT_SearchSanPham.thanhTien);
       model.addRow(vector);
       tblHoaDon.setModel(model);
   }
   private void showHinhThucThanhToan(){
        try {
            cbPTTT.removeAll();
            connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
            String query = "select sTenHinhThucThanhToan FROM tbl_HinhThucThanhToan";
            preparedStatement = connection.prepareStatement(query);
            resultset = preparedStatement.executeQuery();
            while(resultset.next()){
                cbPTTT.addItem(resultset.getString("sTenHinhThucThanhToan"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frm_MayTinhTien.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        pnL_left = new javax.swing.JPanel();
        pnl_KhachHang = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtMaKH = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lbTenKH = new javax.swing.JLabel();
        btnXacNhan = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        btnTaoKhachHang = new javax.swing.JButton();
        pnl_ChucNang = new javax.swing.JPanel();
        tabChucNang = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        btnTamHoan = new javax.swing.JButton();
        btnKiemTraGia = new javax.swing.JButton();
        btnLayHoaDon = new javax.swing.JButton();
        btnNull = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        btnDSTamHoan2 = new javax.swing.JButton();
        btnHuyHoaDon2 = new javax.swing.JButton();
        btnThayDoiGia2 = new javax.swing.JButton();
        btnNull3 = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        pnl_Center = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        pnl_Right = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        btnTimKiem = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtSoLuong = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lbThanhTien = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        lbGiamGia = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        lbKhachPhaiTra = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        lbTienThua = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txtTienKhachDua = new javax.swing.JTextField();
        cbPTTT = new javax.swing.JComboBox<>();
        btnThanhToan = new javax.swing.JButton();
        pnl_bottom = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        lbTenNhanVien = new javax.swing.JLabel();
        lbNgay = new javax.swing.JLabel();
        lbGio = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        pnL_left.setBackground(new java.awt.Color(255, 255, 255));
        pnL_left.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnl_KhachHang.setBackground(new java.awt.Color(255, 255, 255));
        pnl_KhachHang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 15))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel1.setText("Mã khách hàng: ");

        txtMaKH.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Tên khách hàng: ");

        lbTenKH.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbTenKH.setForeground(new java.awt.Color(255, 51, 51));
        lbTenKH.setText("Chưa xác định");

        btnXacNhan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXacNhan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icon/male_user_32px.png"))); // NOI18N
        btnXacNhan.setText("Xác nhận");
        btnXacNhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXacNhanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnl_KhachHangLayout = new javax.swing.GroupLayout(pnl_KhachHang);
        pnl_KhachHang.setLayout(pnl_KhachHangLayout);
        pnl_KhachHangLayout.setHorizontalGroup(
            pnl_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_KhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl_KhachHangLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(lbTenKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnl_KhachHangLayout.createSequentialGroup()
                        .addGroup(pnl_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(pnl_KhachHangLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(btnXacNhan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_KhachHangLayout.setVerticalGroup(
            pnl_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_KhachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_KhachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lbTenKH))
                .addGap(30, 30, 30)
                .addComponent(btnXacNhan)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Tạo tài khoản khách hàng")));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Tạo tài khoản khách hàng: ");

        btnTaoKhachHang.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnTaoKhachHang.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icon/themmoisp-45.png"))); // NOI18N
        btnTaoKhachHang.setText("Tạo thành viên mới");
        btnTaoKhachHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoKhachHangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnTaoKhachHang)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(btnTaoKhachHang)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_ChucNang.setBackground(new java.awt.Color(255, 255, 255));
        pnl_ChucNang.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabChucNang.setTabPlacement(javax.swing.JTabbedPane.BOTTOM);
        tabChucNang.setFont(new java.awt.Font("Tahoma", 0, 38)); // NOI18N

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        btnTamHoan.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnTamHoan.setText("Tạm hoãn");
        btnTamHoan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTamHoanActionPerformed(evt);
            }
        });

        btnKiemTraGia.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnKiemTraGia.setText("Kiểm tra giá");

        btnLayHoaDon.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnLayHoaDon.setText("Lấy lại hóa đơn");
        btnLayHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLayHoaDonActionPerformed(evt);
            }
        });

        btnNull.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnNull.setText("�?ăng xuất");
        btnNull.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNullActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnKiemTraGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLayHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(btnTamHoan, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNull, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTamHoan, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnKiemTraGia, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnLayHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNull, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabChucNang.addTab("    <    ", jPanel8);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        btnDSTamHoan2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnDSTamHoan2.setText("Lấy H�? ( mã KH)");
        btnDSTamHoan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDSTamHoan2ActionPerformed(evt);
            }
        });

        btnHuyHoaDon2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnHuyHoaDon2.setText("Hủy hóa đơn");
        btnHuyHoaDon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuyHoaDon2ActionPerformed(evt);
            }
        });

        btnThayDoiGia2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        btnThayDoiGia2.setText("Thay đổi giá");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnHuyHoaDon2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnThayDoiGia2, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)
                    .addComponent(btnDSTamHoan2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnNull3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDSTamHoan2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnHuyHoaDon2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnThayDoiGia2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnNull3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabChucNang.addTab("   >    ", jPanel11);

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jLabel10.setText("Bài tập đồ án môn Công nghệ Java");

        jLabel12.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        jLabel12.setText("�?ược thực hiện bởi: ");

        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("Trần Văn Hi�?n");

        javax.swing.GroupLayout pnl_ChucNangLayout = new javax.swing.GroupLayout(pnl_ChucNang);
        pnl_ChucNang.setLayout(pnl_ChucNangLayout);
        pnl_ChucNangLayout.setHorizontalGroup(
            pnl_ChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabChucNang)
            .addGroup(pnl_ChucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_ChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(pnl_ChucNangLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnl_ChucNangLayout.setVerticalGroup(
            pnl_ChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_ChucNangLayout.createSequentialGroup()
                .addComponent(tabChucNang, javax.swing.GroupLayout.PREFERRED_SIZE, 472, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl_ChucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnL_leftLayout = new javax.swing.GroupLayout(pnL_left);
        pnL_left.setLayout(pnL_leftLayout);
        pnL_leftLayout.setHorizontalGroup(
            pnL_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl_KhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_ChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnL_leftLayout.setVerticalGroup(
            pnL_leftLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnL_leftLayout.createSequentialGroup()
                .addComponent(pnl_KhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_ChucNang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl_Center.setBackground(new java.awt.Color(255, 255, 255));
        pnl_Center.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 51, 51));
        jLabel14.setText("HÓA �?ƠN");

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giảm giá", "�?ơn giá", "Thành ti�?n"
            }
        ));
        tblHoaDon.setGridColor(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(tblHoaDon);
        if (tblHoaDon.getColumnModel().getColumnCount() > 0) {
            tblHoaDon.getColumnModel().getColumn(2).setPreferredWidth(40);
        }

        javax.swing.GroupLayout pnl_CenterLayout = new javax.swing.GroupLayout(pnl_Center);
        pnl_Center.setLayout(pnl_CenterLayout);
        pnl_CenterLayout.setHorizontalGroup(
            pnl_CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CenterLayout.createSequentialGroup()
                .addContainerGap(229, Short.MAX_VALUE)
                .addComponent(jLabel14)
                .addGap(224, 224, 224))
            .addGroup(pnl_CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE))
        );
        pnl_CenterLayout.setVerticalGroup(
            pnl_CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CenterLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel14)
                .addGap(872, 872, 872))
            .addGroup(pnl_CenterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_CenterLayout.createSequentialGroup()
                    .addGap(0, 64, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 863, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnl_Right.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Tìm kiếm sản phẩm");

        btnTimKiem.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icon/timkiem-25.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel5.setText("Mã sản phẩm: ");

        txtMaSP.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N

        btnThem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icon/themmoisp-20.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel16.setText("Số lượng: ");

        txtSoLuong.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N

        btnXoa.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icon/delete_20px.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnThem)
                .addGap(36, 36, 36)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(48, 48, 48)
                        .addComponent(txtSoLuong))
                    .addComponent(jLabel5)
                    .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(txtSoLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnXoa))
                .addGap(41, 41, 41))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("THANH TO�?N");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Thành ti�?n: ");

        lbThanhTien.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbThanhTien.setForeground(new java.awt.Color(255, 0, 51));
        lbThanhTien.setText("0.0");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Phương thức thanh toán: ");

        lbGiamGia.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbGiamGia.setForeground(new java.awt.Color(255, 0, 51));
        lbGiamGia.setText("0.0");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Giảm giá: ");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Ti�?n khách đưa: ");

        lbKhachPhaiTra.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbKhachPhaiTra.setForeground(new java.awt.Color(255, 0, 51));
        lbKhachPhaiTra.setText("0.0");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Khách phải trả: ");

        lbTienThua.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTienThua.setForeground(new java.awt.Color(255, 0, 51));
        lbTienThua.setText("0.0");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Ti�?n thừa");

        txtTienKhachDua.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        txtTienKhachDua.setText("0");

        cbPTTT.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        btnThanhToan.setBackground(new java.awt.Color(255, 0, 0));
        btnThanhToan.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnThanhToan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images_icon/banhang-30.png"))); // NOI18N
        btnThanhToan.setText("Thanh toán");
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(jLabel6))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addGap(115, 115, 115)
                        .addComponent(lbTienThua))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbPTTT, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addGap(43, 43, 43)))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbKhachPhaiTra)
                            .addComponent(lbGiamGia)
                            .addComponent(lbThanhTien))))
                .addContainerGap(21, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnThanhToan)
                .addGap(131, 131, 131))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jLabel6)
                .addGap(61, 61, 61)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbThanhTien))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(lbGiamGia))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(lbKhachPhaiTra))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtTienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbTienThua)
                    .addComponent(jLabel17))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbPTTT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(btnThanhToan)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnl_RightLayout = new javax.swing.GroupLayout(pnl_Right);
        pnl_Right.setLayout(pnl_RightLayout);
        pnl_RightLayout.setHorizontalGroup(
            pnl_RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnl_RightLayout.setVerticalGroup(
            pnl_RightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_RightLayout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(pnL_left, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_Center, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl_Right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnL_left, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_Center, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnl_Right, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pnl_bottom.setBackground(new java.awt.Color(255, 255, 255));
        pnl_bottom.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        jLabel8.setText("Tên nhân viên: ");

        lbTenNhanVien.setFont(new java.awt.Font("Tahoma", 0, 17)); // NOI18N
        lbTenNhanVien.setForeground(new java.awt.Color(255, 51, 51));
        lbTenNhanVien.setText("Chưa xác định");

        lbNgay.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbNgay.setText("26/7/2021");

        lbGio.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbGio.setText("2:36:00");
        lbGio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lbGioKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnl_bottomLayout = new javax.swing.GroupLayout(pnl_bottom);
        pnl_bottom.setLayout(pnl_bottomLayout);
        pnl_bottomLayout.setHorizontalGroup(
            pnl_bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_bottomLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addComponent(lbTenNhanVien)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbNgay)
                .addGap(32, 32, 32)
                .addComponent(lbGio)
                .addGap(174, 174, 174))
        );
        pnl_bottomLayout.setVerticalGroup(
            pnl_bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_bottomLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnl_bottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbTenNhanVien)
                    .addComponent(lbNgay)
                    .addComponent(lbGio))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(pnl_bottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl_bottom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXacNhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXacNhanActionPerformed
        try {
            // TODO add your handling code here:
            if(txtMaKH.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "Chưa nhập mã khách hàng");
                return;
            }
            else {
                connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
                String query = "SELECT * FROM tbl_KhachHang WHERE sSoDienThoai = '"+txtMaKH.getText()+"'";
                preparedStatement = connection.prepareStatement(query);
                resultset = preparedStatement.executeQuery();
                
                if(!resultset.next()){
                    JOptionPane.showMessageDialog(this, "Không tìm thấy tài khoản khách hàng");
                    return;
                }
                else {
                    String data = resultset.getString("sHoTen");
                    this.lbTenKH.setText(data);
                    this.txtMaKH.setEditable(true);
                    //this.lbIconKhoa.setIcon(icon);
                }
            }
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(this, ex);
        }
        
    }//GEN-LAST:event_btnXacNhanActionPerformed

    private void btnTaoKhachHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoKhachHangActionPerformed
        // TODO add your handling code here:
        DiaLogTaoKhachHang dag = new DiaLogTaoKhachHang(this, true);
        dag.setVisible(true);
    }//GEN-LAST:event_btnTaoKhachHangActionPerformed

    private void lbGioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbGioKeyReleased
        // TODO add your handling code here:
       //    this.lbGio.setText(LocalTime.now().toString());
    }//GEN-LAST:event_lbGioKeyReleased

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        // TODO add your handling code here:
        Dialog_MTT_SearchSanPham dialog = new Dialog_MTT_SearchSanPham(this, true);
        dialog.setVisible(true);
        //String str = dialog.getTextF();
        //txtMaSP.setText(str);
      
        if(dialog.maSP != ""){
            Vector vector = new Vector();
            vector.add(dialog.maSP);
            vector.add(dialog.tenSP);
            vector.add(dialog.soLuong);
            vector.add(dialog.giamGia);
            vector.add(dialog.donGia);
            double thanhTien = Float.parseFloat(dialog.donGia) * Integer.parseInt(dialog.soLuong);
            vector.add(thanhTien);
            model.addRow(vector);
        }
        tblHoaDon.setModel(model);
        
      
        
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        try {
            // TODO add your handling code here:
            //doDuLieuVaoTable();
            //tblHoaDon.removeAll();
//            String arr[] = {"Mã SP", "Tên SP", "Số lượng", "Giảm giá", "�?ơn giá", "Thành ti�?n"};
//            DefaultTableModel model = new DefaultTableModel(arr, 0);
            connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
            String query = "SELECT * FROM tbl_SanPham WHERE PK_iSanPhamID = '"+txtMaSP.getText()+"'";
            preparedStatement = connection.prepareStatement(query);
            resultset = preparedStatement.executeQuery();
            if(resultset.next()){
                
                Vector vector = new Vector();
                vector.add(resultset.getString("PK_iSanPhamID"));
                vector.add(resultset.getString("sTenSanPham"));
               
                vector.add(txtSoLuong.getText());
                String queryGiamGia = "SELECT * FROM tbl_GiamGia WHERE PK_iGiamGiaID = '"+resultset.getString("FK_iGiamGiaID")+"'";
                double giamGiaSUM = 0;
                try {      
                    PreparedStatement preaSta = connection.prepareStatement(queryGiamGia);
                    ResultSet rs = preaSta.executeQuery();
                if(rs.next()){
                    vector.add(rs.getString("fMucGiamGia"));
                    double giamGia = Double.parseDouble(rs.getString("fMucGiamGia")) * Integer.parseInt(txtSoLuong.getText());
                    giamGiaSUM = Double.parseDouble(lbGiamGia.getText()) + giamGia;
                    lbGiamGia.setText(String.valueOf(giamGiaSUM));
                }
                } catch (Exception e) {
                    //vector.add("0");
                }
            
  
                vector.add(resultset.getString("fGiaBan"));
                double thanhTien = Float.parseFloat(resultset.getString("fGiaBan")) * Integer.parseInt(txtSoLuong.getText());
                //String s = String.valueOf(thanhTien);
                //vector.add(s);
                vector.add(thanhTien);
                model.addRow(vector);
                double thanhTienSum = Double.parseDouble(lbThanhTien.getText()) + thanhTien;
                lbThanhTien.setText(String.valueOf(thanhTienSum));
                
                lbKhachPhaiTra.setText(String.valueOf(thanhTienSum - giamGiaSUM));
                //double tienThua = Double.parseDouble(txtTienKhachDua.getText()) - Double.parseDouble(lbKhachPhaiTra.getText());
                //lbTienThua.setText(String.valueOf(tienThua));
                
                //Thêm vào chi tiết hóa đơn
                
                txtMaSP.setText("");
                txtSoLuong.setText("1");
      
            }
            else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm");
            }
            //btnTamHoan.setEnabled(false);
            btnLayHoaDon.setEnabled(false);
            tblHoaDon.setModel(model);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Lỗi");
        }
    }//GEN-LAST:event_btnThemActionPerformed
    public double giaTri(String a, String b){
        return (Double.parseDouble(a) + Double.parseDouble(a));
    }
    
    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int i = tblHoaDon.getSelectedRow();
        
        TableModel model = tblHoaDon.getModel();
        if(i >= 0){
            if(JOptionPane.showConfirmDialog(this, "Xóa sản phẩm này ?", "Confirm",JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
                this.model.removeRow(i);
        }
        else {
            JOptionPane.showMessageDialog(this, "Ch�?n 1 dòng để xóa");
        }
       
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:

        TableModel model = tblHoaDon.getModel();
      
        //Kiểm tra danh sách hóa đơn có gì trong đó không bằng cách:
        if(tblHoaDon.getRowCount() <= 0){
            //Nếu không có gì trong hóa đơn thì thông báo CHƯA CÓ GÌ TRONG HÓA �?ƠN KHÔNG THỂ THANH TO�?N
            JOptionPane.showMessageDialog(this, "Có gì đâu mà thanh toán");
        }
        else if(Double.parseDouble(txtTienKhachDua.getText())<Double.parseDouble(lbKhachPhaiTra.getText())){
            JOptionPane.showMessageDialog(this, "Không bán thiếu");
        }
        //Nếu đã có sản phẩm trong hóa đơn thì ta tạo hóa đơn mới        
        else {           
            double tienThua = Double.parseDouble(txtTienKhachDua.getText()) - Double.parseDouble(lbKhachPhaiTra.getText());
            lbTienThua.setText(String.valueOf(tienThua));
            JOptionPane.showMessageDialog(this, "Ti�?n thối lại: " + lbTienThua.getText());
            
            String PK_iTaiKhoanID = "";
            try {
                connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
//                String query = "SET DATEFORMAT dmy "
//                        + "INSERT INTO tbl_DonHang VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                  String query = "INSERT INTO tbl_DonHang(FK_IKHACHHANGID, FK_HINHTHUCTHANHTOANID, FK_ITAIKHOANID, DNGAYDATHANG, DNGAYGIAOHANG, SDIACHIGIAOHANG, SGHICHU, BTINHTRANGTHANHTOAN, BTINHTRANGGIAOHANG, FTONGTIEN) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                preparedStatement = connection.prepareStatement(query);
                if(!lbTenKH.getText().equals("Chưa xác định")){
                    //preparedStatement.setString(1, lbTenKH.getText());
                    String queryKH = "SELECT PK_iKhachHangID FROM tbl_KhachHang WHERE sHoTen = N'"+lbTenKH.getText()+"'";
                    PreparedStatement preKH = connection.prepareStatement(queryKH);
                    ResultSet rsKH = preKH.executeQuery();
                    if(rsKH.next())
                        preparedStatement.setString(1, rsKH.getString("PK_iKhachHangID"));
                        // preparedStatement.setString(1, "1");
                }               
                else preparedStatement.setString(1, "2");

                JOptionPane.showMessageDialog(this, cbPTTT.getSelectedItem().toString());
                try {
                    String query2 = "SELECT PK_iHinhThucThanhToanID "
                            + "FROM tbl_HinhThucThanhToan "
                            + "WHERE sTenHinhThucThanhToan = N'"+cbPTTT.getSelectedItem().toString()+"'";

                    PreparedStatement pre = connection.prepareStatement(query2);
                    ResultSet rs = pre.executeQuery();

                    if(rs.next())
                        preparedStatement.setString(2, rs.getString("PK_iHinhThucThanhToanID"));
                        //preparedStatement.setString(2, "1");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Kiểm tra lại hình thức thanh toán");
                    return;
                }          
//            try {
//                String query3 = "SELECT PK_iTaiKhoanID FROM tbl_TaiKhoan WHERE sHoTen = N'"+lbTenNhanVien.getText()+"'";
//                 PreparedStatement pre1 = connection.prepareStatement(query3);
//                 ResultSet rs1 = pre1.executeQuery();
//                 if(rs1.next()){
//                     preparedStatement.setString(3, rs1.getString("PK_iTaiKhoanID"));
//                     PK_iTaiKhoanID = rs1.getString("PK_iTaiKhoanID");
//                 }
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên đang làm việc");
//            }
                
            preparedStatement.setString(3, "1");
            preparedStatement.setString(4, lbNgay.getText());           
            preparedStatement.setString(5, lbNgay.getText());
            preparedStatement.setString(6, "Pay at the store");
            preparedStatement.setString(7, lbGio.getText());
            preparedStatement.setString(8, "1");
            preparedStatement.setString(9, "1");
            preparedStatement.setString(10, lbKhachPhaiTra.getText());
            preparedStatement.executeUpdate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi xung đột dữ liệu");
                e.printStackTrace();
            }
           
            
            //Sau khi tạo hóa đơn mới ta đ�?c các dòng trong trong JTable vào CSDL với mã hóa đơn là hóa đơn vừa mới tạo
            //�?ầu tiên lấy lại mã hóa đơn vừa tạo          
                //1. Lấy cái mã hóa đơn với đi�?u kiện th�?i gian tạo = th�?i gian hiện tại
                    //Nhưng trong 1 phút có thể tạo nhi�?u hóa đơn nếu như lấy đúng th�?i gian tính cả giây thì th�?i gian load dữ liệu sẽ
                    //sai lệch khiến không lấy được mã đơn hàng
                //2. Lấy cái mã hóa đơn cao nhất
                //Nhưng nếu lấy mã hóa đơn cao nhất thì lưu trữ CSDL không hay khi máy chỉ 1 ngư�?i sử dụng 
                //Nếu đồng th�?i 2 ngư�?i sử dụng thì thêm cả ID nhân viên vào đi�?u kiện
                
                //Ch�?n cách 2:
            try {
                String layMaHD = "SELECT PK_iDonHang from tbl_DonHang"
                        + " WHERE PK_iDonHang = (SELECT MAX(PK_iDonHang)"
                        + " FROM tbl_DonHang) AND FK_iTaiKhoanID = '1'";
                PreparedStatement preaa = connection.prepareStatement(layMaHD);
                ResultSet rsss = preaa.executeQuery();
                //�?Ọc từng dòng vào
                
                String docCTHD = "INSERT INTO tbl_ChiTietDonHang(FK_IDONHANG, FK_ISANPHAMID, ISOLUONG, FGIABAN, FGIAMGIA) VALUES (?, ?, ?, ?, ?)";
                PreparedStatement preDocCT =  connection.prepareStatement(docCTHD);
                
                
                for(int i = 0; i< tblHoaDon.getRowCount(); i++){
                    if(rsss.next())
                        preDocCT.setString(1, rsss.getString("PK_iDonHang"));
                        preDocCT.setString(2, model.getValueAt(i, 0).toString());
                        preDocCT.setString(3, model.getValueAt(i, 2).toString());
                        preDocCT.setString(4, model.getValueAt(i, 4).toString());
                        preDocCT.setString(5, model.getValueAt(i, 3).toString());

                        preDocCT.executeUpdate();
                }
                this.lbGiamGia.setText("0.0");
                this.lbThanhTien.setText("0.0");
                this.lbKhachPhaiTra.setText("0.0");
                this.txtTienKhachDua.setText("0");
                this.lbTienThua.setText("0.0");
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi chỗ nào cũng không biết");  
                //e.printStackTrace();
            }
            this.model.setNumRows(0);
            this.btnTamHoan.setEnabled(true);
            this.btnLayHoaDon.setEnabled(true);
        }  
        
        
    }//GEN-LAST:event_btnThanhToanActionPerformed

    private void btnNullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNullActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        frm_DangNhap frm = new frm_DangNhap();       
        frm.setVisible(true);
    }//GEN-LAST:event_btnNullActionPerformed

    private void btnTamHoanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTamHoanActionPerformed
        // TODO add your handling code here:
        String PK_iTaiKhoanID = "";
            //JOptionPane.showMessageDialog(this, tblHoaDon.getRowCount());
            try {
                connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
//                String query = "SET DATEFORMAT dmy "
//                        + "INSERT INTO tbl_DonHang VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                String query = "INSERT INTO tbl_DonHang(FK_IKHACHHANGID, FK_HINHTHUCTHANHTOANID, FK_ITAIKHOANID, DNGAYDATHANG, DNGAYGIAOHANG, SDIACHIGIAOHANG, SGHICHU, BTINHTRANGTHANHTOAN, BTINHTRANGGIAOHANG, FTONGTIEN) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                preparedStatement = connection.prepareStatement(query);
                if(!lbTenKH.getText().equals("Chưa xác định")){
                    //preparedStatement.setString(1, lbTenKH.getText());
                    String queryKH = "SELECT PK_iKhachHangID FROM tbl_KhachHang WHERE sHoTen = N'"+lbTenKH.getText()+"'";
                    PreparedStatement preKH = connection.prepareStatement(queryKH);
                    ResultSet rsKH = preKH.executeQuery();
                    if(rsKH.next())
                        preparedStatement.setString(1, rsKH.getString("PK_iKhachHangID"));
                        //preparedStatement.setString(1, "1");
                }
                
                else preparedStatement.setString(1, "2");

                JOptionPane.showMessageDialog(this, cbPTTT.getSelectedItem().toString());
                try {
                    String query2 = "SELECT PK_iHinhThucThanhToanID "
                            + "FROM tbl_HinhThucThanhToan "
                            + "WHERE sTenHinhThucThanhToan = N'"+cbPTTT.getSelectedItem().toString()+"'";

                    PreparedStatement pre = connection.prepareStatement(query2);
                    ResultSet rs = pre.executeQuery();

                    if(rs.next())
                        preparedStatement.setString(2, rs.getString("PK_iHinhThucThanhToanID"));
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Kiểm tra lại hình thức thanh toán");
                    return;
                }
//          try {
//                String query3 = "SELECT PK_iTaiKhoanID FROM tbl_TaiKhoan WHERE sHoTen = N'"+lbTenNhanVien.getText()+"'";
//                 PreparedStatement pre1 = connection.prepareStatement(query3);
//                 ResultSet rs1 = pre1.executeQuery();
//                 if(rs1.next()){
//                     //preparedStatement.setString(3, rs1.getString("PK_iTaiKhoanID"));
//                     preparedStatement.setString(3, "1");
//                     PK_iTaiKhoanID = rs1.getString("PK_iTaiKhoanID");
//                 }
//            } catch (Exception e) {
//                JOptionPane.showMessageDialog(this, "Không tìm thấy nhân viên đang làm việc");
//            }
            preparedStatement.setString(3, "1");
            preparedStatement.setString(4, lbNgay.getText());           
            preparedStatement.setString(5, lbNgay.getText());
            preparedStatement.setString(6, "Pay of the store");
            preparedStatement.setString(7, lbGio.getText());
            preparedStatement.setString(8, "0");
            preparedStatement.setString(9, "1");
            preparedStatement.setString(10, lbKhachPhaiTra.getText());
            preparedStatement.executeUpdate();
            } catch (Exception e) {
                //JOptionPane.showMessageDialog(this, "Lỗi xung đột dữ liệu");
                e.printStackTrace();
            }
           
            
            //Sau khi tạo hóa đơn mới ta đ�?c các dòng trong trong JTable vào CSDL với mã hóa đơn là hóa đơn vừa mới tạo
            //�?ầu tiên lấy lại mã hóa đơn vừa tạo          
                //1. Lấy cái mã hóa đơn với đi�?u kiện th�?i gian tạo = th�?i gian hiện tại
                    //Nhưng trong 1 phút có thể tạo nhi�?u hóa đơn nếu như lấy đúng th�?i gian tính cả giây thì th�?i gian load dữ liệu sẽ
                    //sai lệch khiến không lấy được mã đơn hàng
                //2. Lấy cái mã hóa đơn cao nhất
                //Nhưng nếu lấy mã hóa đơn cao nhất thì lưu trữ CSDL không hay khi máy chỉ 1 ngư�?i sử dụng 
                //Nếu đồng th�?i 2 ngư�?i sử dụng thì thêm cả ID nhân viên vào đi�?u kiện
                
                //Ch�?n cách 2:
            try {
                String layMaHD = "SELECT PK_iDonHang from tbl_DonHang"
                        + " WHERE PK_iDonHang = (SELECT MAX(PK_iDonHang)"
                        + " FROM tbl_DonHang) AND FK_iTaiKhoanID = '1'";
                PreparedStatement preaa = connection.prepareStatement(layMaHD);
                ResultSet rsss = preaa.executeQuery();
//                if(rsss.next())
//                    JOptionPane.showMessageDialog(this, rsss.getString("PK_iDonHang"));
                //�?Ọc từng dòng vào
                
                String docCTHD = "INSERT INTO tbl_ChiTietDonHang(FK_IDONHANG, FK_ISANPHAMID, ISOLUONG, FGIABAN, FGIAMGIA) VALUES (?, ?, ?, ?, ?)";
                PreparedStatement preDocCT =  connection.prepareStatement(docCTHD);
                
                
                for(int i = 0; i< tblHoaDon.getRowCount(); i++){
                    if(rsss.next())
                        //preDocCT.setString(1, rsss.getString("PK_iDonHang"));
                        preDocCT.setString(1, rsss.getString("PK_iDonHang"));
                    preDocCT.setString(2, model.getValueAt(i, 0).toString());
                    preDocCT.setString(3, model.getValueAt(i, 2).toString());
                    preDocCT.setString(4, model.getValueAt(i, 4).toString());
                    preDocCT.setString(5, model.getValueAt(i, 3).toString());
                    
                    preDocCT.executeUpdate();
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Lỗi chỗ nào cũng không biết");  
                //e.printStackTrace();
            }
            this.model.setNumRows(0);
            this.btnLayHoaDon.setEnabled(true);
            this.lbThanhTien.setText("0");
            this.lbGiamGia.setText("0");
            this.lbKhachPhaiTra.setText("0");
            this.txtTienKhachDua.setText("0");
            this.lbTienThua.setText("0");
    }//GEN-LAST:event_btnTamHoanActionPerformed

    private void btnLayHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLayHoaDonActionPerformed
        try {
            // TODO add your handling code here:
            //Lấy lại cái hóa đơn gần nhất vừa tạm hoãn
            connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
            String query = "SELECT tbl_SanPham.PK_iSanPhamID, sTenSanPham, iSoLuong, fGiamGia, tbl_SanPham.fGiaBan"
                        + " FROM tbl_ChiTietDonHang, tbl_DonHang, tbl_SanPham"
                        + " WHERE tbl_ChiTietDonHang.FK_iDonHang = tbl_DonHang.PK_iDonHang"
                        + " AND tbl_ChiTietDonHang.FK_iSanPhamID = tbl_SanPham.PK_iSanPhamID"
                        + " AND FK_iTaiKhoanID = '1'"
                        + " AND bTinhTrangThanhToan = '0'"
                        + " AND tbl_DonHang.PK_iDonHang = (SELECT MAX(PK_iDonHang) FROM tbl_DonHang WHERE FK_iTaiKhoanID = '1' AND bTinhTrangThanhToan = '0')";
                    
            preparedStatement = connection.prepareStatement(query);
            resultset = preparedStatement.executeQuery();
            double giamGia = 0;
            while(resultset.next()){
                Vector vector = new Vector();
                vector.add(resultset.getString("PK_iSanPhamID"));
                vector.add(resultset.getString("sTenSanPham"));
                vector.add(resultset.getString("iSoLuong"));
                vector.add(resultset.getString("fGiamGia"));
                vector.add(resultset.getString("fGiaBan"));
                double thanhTien = Double.parseDouble(resultset.getString("iSoLuong")) * Double.parseDouble(resultset.getString("fGiaBan")) - Double.parseDouble(resultset.getString("fGiamGia"));
                vector.add(thanhTien);
                
                model.addRow(vector);
               
                giamGia = giamGia + Double.parseDouble(resultset.getString("fGiamGia"));
                this.lbGiamGia.setText(String.valueOf(giamGia));
            }
            tblHoaDon.setModel(model);
            this.lbThanhTien.setText(thanhTienLLHD());
            
            this.lbKhachPhaiTra.setText(String.valueOf(Double.parseDouble(thanhTienLLHD()) - giamGia));
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn");
        }
    }//GEN-LAST:event_btnLayHoaDonActionPerformed

    private void btnHuyHoaDon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuyHoaDon2ActionPerformed
        // TODO add your handling code here:
       DialogHuyHD diaHuy = new DialogHuyHD(this, true);
       diaHuy.setVisible(true);
    }//GEN-LAST:event_btnHuyHoaDon2ActionPerformed

    private void btnDSTamHoan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDSTamHoan2ActionPerformed
        // TODO add your handling code here:
        if(lbTenKH.getText().equals("Chưa xác định")){
            JOptionPane.showMessageDialog(this, "Không tìm thấy mã khách hàng");
        }
        else {
            try {
                connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
                String query = "SELECT tbl_SanPham.PK_iSanPhamID, sTenSanPham, iSoLuong, fGiamGia, tbl_SanPham.fGiaBan"
                        + " FROM tbl_ChiTietDonHang, tbl_DonHang, tbl_SanPham"
                        + " WHERE tbl_ChiTietDonHang.FK_iDonHang = tbl_DonHang.PK_iDonHang"
                        + " AND tbl_ChiTietDonHang.FK_iSanPhamID = tbl_SanPham.PK_iSanPhamID"
                        + " AND FK_iKhachHangID = '"+PK_KhachHang()+"'"
                        + " AND bTinhTrangThanhToan = 'False'"
                        + " AND tbl_DonHang.PK_iDonHang = (SELECT MAX(PK_iDonHang) FROM tbl_DonHang WHERE FK_iKhachHangID = '"+PK_KhachHang()+"' AND bTinhTrangThanhToan = 'False')";
                preparedStatement = connection.prepareStatement(query);
                resultset = preparedStatement.executeQuery();
                double giamGia = 0;
            while(resultset.next()){
                Vector vector = new Vector();
                vector.add(resultset.getString("PK_iSanPhamID"));
                vector.add(resultset.getString("sTenSanPham"));
                vector.add(resultset.getString("iSoLuong"));
                vector.add(resultset.getString("fGiamGia"));
                vector.add(resultset.getString("fGiaBan"));
                double thanhTien = Double.parseDouble(resultset.getString("iSoLuong")) * Double.parseDouble(resultset.getString("fGiaBan")) - Double.parseDouble(resultset.getString("fGiamGia"));
                vector.add(thanhTien);
                
                model.addRow(vector);
               
                giamGia = giamGia + Double.parseDouble(resultset.getString("fGiamGia"));
                this.lbGiamGia.setText(String.valueOf(giamGia));
            }
            tblHoaDon.setModel(model);
            this.lbThanhTien.setText(thanhTienLLHD());
            
            this.lbKhachPhaiTra.setText(String.valueOf(Double.parseDouble(thanhTienLLHD()) - giamGia));
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Không tìm thấy hóa đơn");
                //e.printStackTrace();
            }
        }
              
    }//GEN-LAST:event_btnDSTamHoan2ActionPerformed
    
    public String PK_KhachHang(){
        if(lbTenKH.getText() != "Chưa xác định"){
        try {
            connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
            String query = "SELECT * FROM tbl_KhachHang WHERE sHoTen = N'"+lbTenKH.getText()+"'";
            preparedStatement = connection.prepareStatement(query);
            resultset = preparedStatement.executeQuery();
            if(resultset.next()){
                return resultset.getString("PK_iKhachHangID");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "KhÔng tìm thấy khách hàng");
        }        
        }
       
        return "2";
    }
    public String thanhTienLLHD(){
        try {
            connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
            String query = "SELECT fTongTien"
                    + " FROM tbl_ChiTietDonHang, tbl_DonHang, tbl_SanPham"
                    + " WHERE tbl_ChiTietDonHang.FK_iDonHang = tbl_DonHang.PK_iDonHang"
                    + " AND tbl_ChiTietDonHang.FK_iSanPhamID = tbl_SanPham.PK_iSanPhamID"
                    + " AND FK_iTaiKhoanID = '1'"
                    + " AND bTinhTrangThanhToan = '0'"
                    + " AND ROWNUM <= 1"
                    //+ " AND tbl_DonHang.PK_iDonHang = (SELECT MAX(PK_iDonHang) FROM tbl_DonHang)"
                   // + " GROUP BY fTongTien";
                    + " ORDER BY PK_iDonHang DESC";
            preparedStatement = connection.prepareStatement(query);
            resultset = preparedStatement.executeQuery();
            if(resultset.next())
                return resultset.getString("fTongTien");
        } catch (SQLException ex) {
            //Logger.getLogger(frm_MayTinhTien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi ở thành ti�?n");
        }
        return null;
    }
    
    public String idTaiKhoan(){
        
        try {
            connection = DBconnection.getConnection(frm_DangNhap.tenDangNhap(), frm_DangNhap.matKhauDangNhap());
            String query = "SELECT PK_iTaiKhoanID FROM tbl_TaiKhoan WHERE sHoTen = N'"+lbTenNhanVien.getText()+"'";
            preparedStatement = connection.prepareStatement(query);
            resultset = preparedStatement.executeQuery();
            if(resultset.next())
                return resultset.getString("PK_iTaiKhoanID");
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy tài khoản nhân viên");
        }
        return null;
    }
    public class TimKiem extends javax.swing.JDialog 
            {
        Connection con = null;
        PreparedStatement preparedStatement = null;
        ResultSet result = null;
        DefaultTableModel tableTimKiem;
    
    public TimKiem(java.awt.Frame parent, boolean model){
        super(parent, model);
        initComponents();
        
        
        this.setTitle("Tìm kiếm sản phẩm");
        this.setLocationRelativeTo(null);
        this.setSize(420, 200);
        JPanel pnlHuyHD = new JPanel();
        JLabel lbHuyHD = new JLabel();
        lbHuyHD.setText("Nhập mã hóa đơn");
        JTextField txtMaHDHuy = new JTextField();
        
        pnlHuyHD.add(lbHuyHD);
        pnlHuyHD.add(txtMaHDHuy);
        
        JDialog dialog = new JDialog();
        dialog.add(pnlHuyHD);
      
        dialog.pack();
        dialog.setVisible(true);
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frm_MayTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frm_MayTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frm_MayTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frm_MayTinhTien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_MayTinhTien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDSTamHoan2;
    private javax.swing.JButton btnHuyHoaDon2;
    private javax.swing.JButton btnKiemTraGia;
    private javax.swing.JButton btnLayHoaDon;
    private javax.swing.JButton btnNull;
    private javax.swing.JButton btnNull3;
    private javax.swing.JButton btnTamHoan;
    private javax.swing.JButton btnTaoKhachHang;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JButton btnThayDoiGia2;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXacNhan;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbPTTT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbGiamGia;
    private javax.swing.JLabel lbGio;
    private javax.swing.JLabel lbKhachPhaiTra;
    private javax.swing.JLabel lbNgay;
    private javax.swing.JLabel lbTenKH;
    private javax.swing.JLabel lbTenNhanVien;
    private javax.swing.JLabel lbThanhTien;
    private javax.swing.JLabel lbTienThua;
    private javax.swing.JPanel pnL_left;
    private javax.swing.JPanel pnl_Center;
    private javax.swing.JPanel pnl_ChucNang;
    private javax.swing.JPanel pnl_KhachHang;
    private javax.swing.JPanel pnl_Right;
    private javax.swing.JPanel pnl_bottom;
    private javax.swing.JTabbedPane tabChucNang;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtMaKH;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSoLuong;
    private javax.swing.JTextField txtTienKhachDua;
    // End of variables declaration//GEN-END:variables
}
